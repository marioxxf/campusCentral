@using Newtonsoft.Json;
@using campusCentralMvc.Controllers;
@inject MiddlewareForUseSessionVariables middlewareForSessionUse
@{
    ViewBag.Title = "Home Page";

    var session = middlewareForSessionUse._httpContextAccessor.HttpContext.Session;
    var userAccountIdLogged = session.GetString("UserAccountIdLogged");
    var userAccountUsernameLogged = session.GetString("UserAccountUsernameLogged");
    var userAccountNameLogged = session.GetString("UserAccountNameLogged");

    List<UserAccountCourseSchedule> userAccountCourseSchedules = new List<UserAccountCourseSchedule>();
    var authController = new AuthController();
    userAccountCourseSchedules = await authController.GetUserAccountCourseScheduleByUserAccountId(int.Parse(userAccountIdLogged));

    List<Topic> topicsByCourseId = new List<Topic>();
    var studyDataController = new StudyDataController();
    topicsByCourseId = await studyDataController.GetAllTopics();
}
@{
    if (userAccountIdLogged == "" || userAccountIdLogged == "0" || userAccountIdLogged == null)
    {
        
    }
    else
    {
        <div class="mainDiv">
            <div class="myCourseScheduleMain">
                <label>Minhas matérias matriculadas para o semestre atual</label>
                <div class="topicDisplay">

                    @{
                        foreach (var topic in userAccountCourseSchedules)
                        {
                            var topicStatus = "";
                            var topicStatusColor = "";
                            if(topic.TopicTravelStatus == 1)
                            {
                                topicStatus = "Em curso";
                            } else if(topic.TopicTravelStatus == 2)
                            {
                                topicStatus = "Aprovado";
                                topicStatusColor = "#54b360";
                            } else if(topic.TopicTravelStatus == 3)
                            {
                                topicStatus = "Reprovado";
                                topicStatusColor = "#c91a1a";
                            }

                            foreach (var topicInfo in topicsByCourseId)
                            {
                                if(topicInfo.Name == topic.TopicNameAssigned)
                                {
                                    <div class="topic">
                                        <div style="display: flex;">
                                            <div>
                                                <label class="topicTitle">@topic.TopicNameAssigned</label><br />
                                                <p class="topicStatus" style="color: @topicStatusColor">@topicStatus</p>
                                                <p class="topicPeriodAttended">@topic.TopicPeriodAttended</p>
                                                <p class="topicFinalScoreTitle">Nota final <b class="topicFinalScore">@topic.TopicFinalScore</b></p>
                                            </div>
                                            <div>
                                                <p class="topicAcronym">@topicInfo.Acronym</p>
                                                <p>&nbsp;</p>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        }
                    }
                </div>
                <table id="myTable" class="table" style="display: none;">
		            <thead>
			            <tr>
				            <th>Matéria</th>
				            <th>Situação</th>
				            <th>Nota final</th>
				            <th>Período cursado</th>
			            </tr>
		            </thead>
		            <tbody>
		            </tbody>
	            </table>
            </div>
        </div>
    }
}
<script type="text/javascript">
    $(document).ready(function () {
        loadUserAccountCourseSchedule();
    });
    function getUserAccountCourseSchedule(userAccountId) {
        return new Promise((resolve, reject) => {
            const settings = {
                "async": true,
                "crossDomain": true,
                "dataType": 'JSON',
                "url": '@Url.Action("GetUserAccountCourseScheduleByUserAccountId", "Auth")',
                "method": "GET",
                "data": { 'userAccountId': userAccountId }
            };

            $.ajax(settings).done(function (response) {
                resolve(response);
            });
        });
    }

    function loadUserAccountCourseSchedule() {
        getUserAccountCourseSchedule('1').then(result => {
            console.log(result); 
            
            // Seleciona a tabela HTML
		    var table = document.getElementById("myTable");

		    // Adiciona as linhas na tabela com as informações do array "result"
		    for (var i = 0; i < result.length; i++) {
			    var row = table.insertRow(-1);
			    var cell1 = row.insertCell(0);
			    var cell2 = row.insertCell(1);
			    var cell3 = row.insertCell(2);
			    var cell4 = row.insertCell(3);
			    cell1.innerHTML = result[i].topicNameAssigned;
			    cell2.innerHTML = result[i].topicTravelStatus;
			    cell3.innerHTML = result[i].topicFinalScore;
			    cell4.innerHTML = result[i].topicPeriodAttended;
		    }
        });
    }
</script>